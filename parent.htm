<!DOCTYPE html>
<html lang="ru">
<head>
    <meta content="text/html; charset=utf-8" http-equiv="content-type">
    <meta name="version" content="0.0.7">
    <script src="https://xshl.org/dist/post-robot.ie.min.js"></script>
    <link rel="stylesheet" media="screen" href="//xshl.org/images/flags.css">
    <link rel="stylesheet" media="screen" href="//xshl.org/images/inc.css">
</head>
<body>
<div class="menuHead"><button class="btn_menu" id="btnMenuJS" onclick="openWindow()"><span></span></button></div>
<div id="auth"></div>
<script>
    var
        callback = Math.random().toString().replace(/[^a-z0-9]+/g, ''),
        openedWindow,
        SUUID, social,
        useBridge = false,
        btnMenu = document.querySelector('#btnMenuJS'),
        identityDomain = 'https://identity.kpcdn.net',
        uidJsonPath = '/identity/api/1/auth/uid.json?callback=tmp',
        uidXmlPath =  '/identity/api/1/auth/uid.xml?callback=tmp',
        profileJsonPath = '/identity/api/1/auth/profile.json?callback=tmp',
        oauthJsonPath = '/auth/oauth.json?callback=tmp',
        bridgePath = '/identity/api/1/auth/bridge.xml',
        redirectURI = '&redirect_uri=' + encodeURI(window.location.href);
    // Не показываем кнопку гамбургера пока она не нужна
    btnMenu.style.display = "none";
    // Загружаем SUUID обычным способом из домена идентити
    fetch(identityDomain + uidJsonPath + callback, {credentials: 'include'})
        .then(function (response) {
            return response.json()
        })
        .then(function (value) {
            console.log('tmp' + callback);
            var s = value['tmp' + callback];
            console.log(s);
            SUUID = s;
            initAuth(s.uid, s.access_token)
        });

    function initAuth(uid, token) {
        if (uid.startsWith("8")) {
            // Бинго пользователь аутентифицирован, кроме прочего это говорит
            // о том что куки на идентити стоят
            // по этому тянем профиль из идентити
            loadProfile(identityDomain + profileJsonPath)
        } else {
            // Вот сейчас у нас две возможных ситуации
            // 1. Не аутентифицирован удачная для нас
            // 2. В дело вмешалось Intelligent Tracking Prevention
            // Запрашиваем список доступных OAuth провайдеров
            fetch(identityDomain + oauthJsonPath + callback + redirectURI, {credentials: 'include'})
                .then(function (response) {
                    return response.json()
                })
                .then(function (value) {
                    console.log('tmp' + callback);
                    social = value['tmp' + callback];
                    console.log(social);
                    var client = value['client'];
                    console.log(client);
                    if (client.uid == SUUID.uid) {
                        // Ситуация номер 1.
                        viewSocial(social)
                    } else {
                        // Генерал! Наши карты – дерьмо.
                        useBridge = true;
                        btnMenu.style.display = "block";
                        postRobot.bridge.openBridge(identityDomain + bridgePath, identityDomain);
                        postRobot.on('tmp' + callback, function(event) {
                            openedWindow.close();
                            SUUID = event.data.message;
                            console.log(SUUID);
                            document.cookie = "uid=" + SUUID.uid;
                            document.cookie = "access_token=" + SUUID.access_token;
                            if (SUUID.uid.startsWith("8")) {
                                loadProfile(profileJsonPath)
                            } else {
                                viewSocial(social)
                            }
                            btnMenu.style.display = "none";
                            return {
                                message: event.data.message
                            }
                        });

                    }
                });
        }
    }

    function openWindow() {
        if (useBridge) {
            openedWindow = window.open(identityDomain + uidXmlPath + callback, callback);
        }
    }

    function loadProfile(url) {
        // Запрашиваем профайл пользователя
        fetch(url + callback, {credentials: 'include'})
        .then(function (response) {
            return response.json()
        })
        .then(function (value) {
            var s = value['tmp' + callback];
            console.log(s);
            viewUserInfo(s)
        });
    }

	function viewSocial(value) {
        // Проверяем поддерживает ли браузер тег <template>
        // проверив наличие аттрибута content у элемента template
        if ('content' in document.createElement('template')) {
            var t = document.querySelector('#social'),
            a = t.content.querySelectorAll(".buttons a");
            a.forEach(function(em){
                if (value.hasOwnProperty(em.id)) {
                    console.log(value[em.id]);
                    em.setAttribute('href', value[em.id]);
                } else {
                    em.style.display = "none";
                }
                console.log(em)
            });
            var emAuth = document.querySelector("#auth"),
                clone = document.importNode(t.content, true);
            emAuth.appendChild(clone);
        } else {
        // необходимо найти другой способ
        // тег <template> не поддерживатся браузером
        }
    }

	function viewUserInfo(s) {
        // Проверяем поддерживает ли браузер тег <template>
        // проверив наличие аттрибута content у элемента template
        if ('content' in document.createElement('template')) {
            var t = document.querySelector('#profile'),
            p = t.content.querySelectorAll("p");
            span = t.content.querySelector("span.flag");
            img = t.content.querySelector("img");
            img.src = s.avatar;
            img.alt = s.name;
            img.title = s.name;
            p[0].textContent = s.name;
            span.className = 'flag flag-' + SUUID.country.toLowerCase();
            p[1].textContent = SUUID.uid;

            // клонируем и вставляем
            var emAuth = document.querySelector("#auth");
            var clone = document.importNode(t.content, true);
            emAuth.appendChild(clone);
        } else {
        // необходимо найти другой способ
        // тег <template> не поддерживатся браузером
        }
    }
</script>

<template id="profile">
    <div class="userInfo">
        <img src="" alt="name" title="name">
        <p>name</p><br />
        <span class="flag flag-es"></span><p>uid</p>
        <button class="btn logout" onclick="window.location.href = 'https://identity.kpcdn.net/identity/api/1/auth/logout';">
            <span>Logout</span>
        </button>
    </div>
</template>

<template id="social">
    <div class="authorizeBtn">
        <div id="jsEnter" class="wrap notPrint flex-container">
            <div class="social">
                <p><strong>Войти через социальную сеть:</strong></p>
                <div class="wrap">
                    <div class="social">
                        <div class="buttons">
                            <a id="twitter" href="" class="tw" title="Twitter">Twitter</a>
                            <a id="vk" href="" class="vk" title="VKontakte">VKontakte</a>
                            <a id="google" href="" class="gp" title="Google">Google</a>
                            <a id="odnoklassniki" href="" class="ok" title="Одноклассники">Одноклассники</a>
                            <a id="facebook" href="" class="fb" title="Facebook">Facebook</a>
                            <a id="mailru" href="" class="mm" title="Мой мир">Мой мир</a>
                            <a id="yandex" href="" class="ya" title="Я.ру">Я.ру</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</template>

</body>
</html>